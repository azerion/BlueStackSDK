#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
#ifndef BLUESTACKSDK_SWIFT_H
#define BLUESTACKSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="BlueStackSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
/// The ad sizes of the Banner Ad.
/// AdSize  | Size in dp (WxH) | Description
/// —————–– | ——— | ——————————————
/// <code>banner</code>       |    320x50  | Fixed size banner for iPhone and iPad
/// <code>largeBanner</code>     | 320x100 | Fixed size banner for iPhone and iPad
/// <code>mediumRectangle</code>       | 300x250 | Fixed size banner for iPhone and iPad
/// <code>fullBanner</code> | 468x60 | Fixed size banner for iPad
/// <code>leaderboard</code> | 728x90 | Fixed size banner for iPad
/// <code>dynamicBanner</code> | screen-widthx50 | Banner with dynamic width for iPad
/// <code>dynamicLeaderboardBanner</code> | screen-widthx90 | Banner with dynamic width for iPad
typedef SWIFT_ENUM(NSInteger, AdSize, open) {
  AdSizeBanner = 0,
  AdSizeLargeBanner = 1,
  AdSizeMediumRectangle = 2,
  AdSizeFullBanner = 3,
  AdSizeLeaderboard = 4,
  AdSizeDynamicBanner = 5,
  AdSizeDynamicLeaderboardBanner = 6,
};

/// Describes the state of each adapter
typedef SWIFT_ENUM(NSInteger, AdapterState, open) {
  AdapterStateReady = 0,
  AdapterStateNotReady = 1,
};

@class NSString;

SWIFT_CLASS("_TtC12BlueStackSDK13AdapterStatus")
@interface AdapterStatus : NSObject
/// Name of the adapter
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
/// State of the adapter
@property (nonatomic, readonly) enum AdapterState state;
/// Description of the status
@property (nonatomic, readonly, copy) NSString * _Nullable statusDescription;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIViewController;
@protocol BannerViewDelegate;
@class NSCoder;
@class RequestOptions;

SWIFT_CLASS("_TtC12BlueStackSDK10BannerView")
@interface BannerView : UIView
/// The banner ad size
@property (nonatomic) enum AdSize adSize;
/// The placement ID.
@property (nonatomic, copy) NSString * _Nullable placementID;
/// View controller from which ad will present full screen content after user interacts with the ad.
@property (nonatomic, strong) UIViewController * _Nullable viewController;
/// An optional delegate object that receives notifications about the ad’s state change events.
@property (nonatomic, weak) IBOutlet id <BannerViewDelegate> _Nullable delegate;
/// Initializes and returns a banner view with the specified ad size.
/// \param adSize The banner ad size
///
- (nonnull instancetype)initWithAdSize:(enum AdSize)adSize OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
/// Request to load an Banner Ad.
/// \param requestOptions The <code>RequestOptions</code> object for supplying targeting information.
///
- (void)loadWithRequestOptions:(RequestOptions * _Nullable)requestOptions;
/// Request to load an Banner Ad.
- (void)load;
/// Starts refreshing banner ad after every certain interval.
- (void)startAutoRefresh;
/// Stops refreshing banner ad.
- (void)stopAutoRefresh;
@end



/// Delegate methods for receiving BannerView state change callbacks.
SWIFT_PROTOCOL("_TtP12BlueStackSDK18BannerViewDelegate_")
@protocol BannerViewDelegate <NSObject>
/// Called when the BannerView receives an ad.
/// \param bannerView The <code>BannerView</code> object that has loaded an ad.
///
/// \param preferredHeight Height of the banner ad.
///
- (void)bannerView:(BannerView * _Nonnull)bannerView didLoadWithPreferredHeight:(CGFloat)preferredHeight;
/// Called when the banner view fails to load an ad. The error parameter provides details about the failure.
/// \param bannerView The <code>BannerView</code> object that failed
///
/// \param error The error describing the failure reason.
///
- (void)bannerView:(BannerView * _Nonnull)bannerView didFailedToLoadWithError:(NSError * _Nonnull)error;
@optional
/// Called when the user clicks on the banner view.
/// \param bannerView The <code>BannerView</code> class object that has been clicked.
///
- (void)didClick:(BannerView * _Nonnull)bannerView;
@required
/// Called when the BannerView get refreshed with an new ad.
/// \param bannerView The <code>BannerView</code> object that has refreshed with an ad.
///
- (void)didRefreshBannerView:(BannerView * _Nonnull)bannerView;
/// Called when the banner view fails to refresh an ad. The error parameter provides details about the failure.
/// \param bannerView The <code>BannerView</code> object that failed
///
/// \param error The error describing the failure reason.
///
- (void)bannerView:(BannerView * _Nonnull)bannerView didFailedToRefreshWithError:(NSError * _Nonnull)error;
@optional
/// Called when the banner view loads a banner ad of different height on refresh.
/// \param bannerView The <code>BannerView</code> object
///
/// \param size The size of the newly loaded banner ad. You may adjust your banner view height if necessary.
///
- (void)bannerView:(BannerView * _Nonnull)bannerView didResizedToSize:(CGSize)size;
@end

@class InitializationStatus;

SWIFT_CLASS("_TtC12BlueStackSDK9BlueStack")
@interface BlueStack : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Returns the shared BlueStack instance
///
/// returns:
/// BlueStack instance
+ (BlueStack * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
/// Returns SDK version number. BlueStack sdk supports semantic versioning.
///
/// returns:
/// Version string in format of MAJOR.MINOR.PATCH
- (NSString * _Nonnull)getVersion SWIFT_WARN_UNUSED_RESULT;
/// Returns the sdk initialization status
@property (nonatomic, readonly, strong) InitializationStatus * _Nonnull initializationStatus;
/// Initializes the BlueStack sdk
/// \param appID BlueStack App ID
///
/// \param completion Completion block to be called after sdk finish to initialize
///
- (void)initializeWithAppID:(NSString * _Nonnull)appID completion:(void (^ _Nonnull)(InitializationStatus * _Nonnull))completion;
/// Returns if BlueStack has been initialized or not
///
/// returns:
/// <code>Bool</code> value indicating if BlueStack has finished initializating.
- (BOOL)isInitialized SWIFT_WARN_UNUSED_RESULT;
- (void)setDebugModeEnabled:(BOOL)enabled;
@end



SWIFT_CLASS("_TtC12BlueStackSDK24BlueStackPrivacySettings")
@interface BlueStackPrivacySettings : NSObject
/// If a user does opt-out of interest-based advertising, set the opt-out value using this method.
/// \param isOptout Boolean value representing the opt-out state.
///
+ (void)setUserOptout:(BOOL)isOptout;
/// Set the value to comply with COPPA
/// \param enabled Set the value to true if the user qualifies as a “child” under applicable laws.
///
+ (void)setIsAgeRestrictedUser:(BOOL)enabled;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol FullScreenDisplayableAd;

/// Delegate methods for receiving callbacks about presenting and dismissal of full screen ads. Full screen ads covers your application’s content.
SWIFT_PROTOCOL("_TtP12BlueStackSDK18FullScreenDelegate_")
@protocol FullScreenDelegate <NSObject>
@optional
/// Called when the user clicks on the full screen ad.
/// \param ad The ad class object that has been clicked.
///
- (void)didClickAd:(id <FullScreenDisplayableAd> _Nonnull)ad;
/// Called after the full screen ad has been dismissed and control has returned to the app.
/// \param ad The ad class object that has been dismissed.
///
- (void)didDismissAd:(id <FullScreenDisplayableAd> _Nonnull)ad;
/// Called when the full screen ad fails to display. The error parameter provides details about the failure.
/// \param ad The ad class object that failed.
///
/// \param error The error describing the failure reason.
///
- (void)ad:(id <FullScreenDisplayableAd> _Nonnull)ad didFailedToDisplayWithError:(NSError * _Nonnull)error;
/// Called when the full screen ad is presented on the screen.
/// \param ad The ad class object that has been presented.
///
- (void)didDisplayAd:(id <FullScreenDisplayableAd> _Nonnull)ad;
@end


/// Ads that present full screen content confirms to this protocol.
SWIFT_PROTOCOL("_TtP12BlueStackSDK23FullScreenDisplayableAd_")
@protocol FullScreenDisplayableAd <NSObject>
/// Delegate object that receives full screen related callbacks
@property (nonatomic, strong) id <FullScreenDelegate> _Nullable fullScreenDelegate;
@end

/// Enum describing the Gender
typedef SWIFT_ENUM(NSInteger, Gender, open) {
  GenderUnknown = 0,
  GenderMale = 1,
  GenderFemale = 2,
};


SWIFT_CLASS("_TtC12BlueStackSDK20InitializationStatus")
@interface InitializationStatus : NSObject
/// List Adapter statuses by adapter name
@property (nonatomic, copy) NSDictionary<NSString *, AdapterStatus *> * _Nonnull adapterStatuses;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol InterstitialAdDelegate;

/// The InterstitialAd class is responsible for managing the lifecycle and display of interstitial advertisements in your application. Interstitial ads are full-screen ads that cover the interface of their host app. They are typically displayed at natural transition points in the flow of an app, such as between levels in a game or after completing a task.
SWIFT_CLASS("_TtC12BlueStackSDK14InterstitialAd")
@interface InterstitialAd : NSObject <FullScreenDisplayableAd>
/// Returns whether the interstitial ad is ready to be displayed.
@property (nonatomic, readonly) BOOL isReady;
/// The placement ID.
@property (nonatomic, readonly, copy) NSString * _Nonnull placementID;
/// View controller from which ad will present full screen content after user interacts with the ad.
@property (nonatomic, strong) UIViewController * _Nullable viewController;
/// An optional delegate object that receives notifications about the ad’s lifecycle events, such as when the ad is loaded or failed to load.
@property (nonatomic, strong) id <InterstitialAdDelegate> _Nullable delegate;
/// An optional delegate object that receives notifications about the ad’s full screen content, such as when the ad presented, failed to present or dismissed.
@property (nonatomic, strong) id <FullScreenDelegate> _Nullable fullScreenDelegate;
/// Initializes a new instance of the <code>InterstitialAd</code> class with the specified placement ID.
/// \param placementID The placement ID of your interstitial ad.
///
- (nonnull instancetype)initWithPlacementID:(NSString * _Nonnull)placementID;
/// Request to load an Interstitial Ad.
/// \param requestOptions The <code>RequestOptions</code> object for supplying targeting information.
///
- (void)loadWithRequestOptions:(RequestOptions * _Nullable)requestOptions;
/// Request to load an Interstitial Ad.
- (void)load;
/// Present the interstitial ad on top of the provided view controller. Must be called on the main thread.
/// \param rootViewController An optional view controller to present the ad. If not given ad will be presented from key UIWindow’s top most view controller.
///
- (void)showFromRootViewController:(UIViewController * _Nullable)rootViewController;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_PROTOCOL("_TtP12BlueStackSDK22InterstitialAdDelegate_")
@protocol InterstitialAdDelegate <NSObject>
/// Called when the interstitial ad has successfully loaded.
/// \param ad The <code>InterstitialAd</code> object that has been loaded.
///
- (void)didLoadInterstitialAd:(InterstitialAd * _Nonnull)ad;
/// Called when the interstitial ad fails to load. The error parameter provides details about the failure.
/// \param ad The <code>InterstitialAd</code> object that failed
///
/// \param error The error describing the failure reason.
///
- (void)interstitialAd:(InterstitialAd * _Nonnull)ad didFailedToLoadWithError:(NSError * _Nonnull)error;
@end

typedef SWIFT_ENUM(NSInteger, LogLevel, open) {
  LogLevelDebug = 0,
  LogLevelInfo = 1,
  LogLevelWarn = 2,
  LogLevelError = 3,
  LogLevelVerbose = 4,
};


SWIFT_PROTOCOL("_TtP12BlueStackSDK10LogMessage_")
@protocol LogMessage <NSObject>
@property (nonatomic, readonly, copy) NSString * _Nonnull logDescription;
@property (nonatomic, readonly, copy) NSString * _Nonnull category;
@end


SWIFT_PROTOCOL("_TtP12BlueStackSDK10LoggerType_")
@protocol LoggerType <NSObject>
- (void)verbose:(SWIFT_NOESCAPE id <LogMessage> _Nonnull (^ _Nonnull)(void))message fileName:(NSString * _Nullable)fileName functionName:(NSString * _Nullable)functionName line:(NSUInteger)line;
- (void)debug:(SWIFT_NOESCAPE id <LogMessage> _Nonnull (^ _Nonnull)(void))message fileName:(NSString * _Nullable)fileName functionName:(NSString * _Nullable)functionName line:(NSUInteger)line;
- (void)info:(SWIFT_NOESCAPE id <LogMessage> _Nonnull (^ _Nonnull)(void))message fileName:(NSString * _Nullable)fileName functionName:(NSString * _Nullable)functionName line:(NSUInteger)line;
- (void)warn:(SWIFT_NOESCAPE id <LogMessage> _Nonnull (^ _Nonnull)(void))message fileName:(NSString * _Nullable)fileName functionName:(NSString * _Nullable)functionName line:(NSUInteger)line;
- (void)error:(SWIFT_NOESCAPE id <LogMessage> _Nonnull (^ _Nonnull)(void))message fileName:(NSString * _Nonnull)fileName functionName:(NSString * _Nonnull)functionName line:(NSUInteger)line;
@end


SWIFT_CLASS("_TtC12BlueStackSDK6Logger")
@interface Logger : NSObject <LoggerType>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) enum LogLevel logLevel;)
+ (enum LogLevel)logLevel SWIFT_WARN_UNUSED_RESULT;
+ (void)setLogLevel:(enum LogLevel)value;
- (void)verbose:(SWIFT_NOESCAPE id <LogMessage> _Nonnull (^ _Nonnull)(void))message fileName:(NSString * _Nullable)fileName functionName:(NSString * _Nullable)functionName line:(NSUInteger)line;
- (void)debug:(SWIFT_NOESCAPE id <LogMessage> _Nonnull (^ _Nonnull)(void))message fileName:(NSString * _Nullable)fileName functionName:(NSString * _Nullable)functionName line:(NSUInteger)line;
- (void)info:(SWIFT_NOESCAPE id <LogMessage> _Nonnull (^ _Nonnull)(void))message fileName:(NSString * _Nullable)fileName functionName:(NSString * _Nullable)functionName line:(NSUInteger)line;
- (void)warn:(SWIFT_NOESCAPE id <LogMessage> _Nonnull (^ _Nonnull)(void))message fileName:(NSString * _Nullable)fileName functionName:(NSString * _Nullable)functionName line:(NSUInteger)line;
- (void)error:(SWIFT_NOESCAPE id <LogMessage> _Nonnull (^ _Nonnull)(void))message fileName:(NSString * _Nonnull)fileName functionName:(NSString * _Nonnull)functionName line:(NSUInteger)line;
+ (void)setEventDebugEnabled:(BOOL)enabled;
+ (void)setDebugModeEnabled:(BOOL)enabled;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface Logger (SWIFT_EXTENSION(BlueStackSDK))
+ (BOOL)isDebugModeEnabled SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isEventDebugEnabled SWIFT_WARN_UNUSED_RESULT;
+ (void)verbose:(SWIFT_NOESCAPE id <LogMessage> _Nonnull (^ _Nonnull)(void))message fileName:(NSString * _Nullable)fileName functionName:(NSString * _Nullable)functionName line:(NSUInteger)line;
+ (void)debug:(SWIFT_NOESCAPE id <LogMessage> _Nonnull (^ _Nonnull)(void))message fileName:(NSString * _Nullable)fileName functionName:(NSString * _Nullable)functionName line:(NSUInteger)line;
+ (void)debugLog:(NSString * _Nonnull)message;
+ (void)info:(SWIFT_NOESCAPE id <LogMessage> _Nonnull (^ _Nonnull)(void))message fileName:(NSString * _Nullable)fileName functionName:(NSString * _Nullable)functionName line:(NSUInteger)line;
+ (void)warn:(SWIFT_NOESCAPE id <LogMessage> _Nonnull (^ _Nonnull)(void))message fileName:(NSString * _Nullable)fileName functionName:(NSString * _Nullable)functionName line:(NSUInteger)line;
+ (void)error:(SWIFT_NOESCAPE id <LogMessage> _Nonnull (^ _Nonnull)(void))message fileName:(NSString * _Nonnull)fileName functionName:(NSString * _Nonnull)functionName line:(NSUInteger)line;
@end


@class CLLocation;
@class NSNumber;

/// The <code>RequestOptions</code> class for supplying targeting information while loading ads.
SWIFT_CLASS("_TtC12BlueStackSDK14RequestOptions")
@interface RequestOptions : NSObject
@property (nonatomic, strong) CLLocation * _Nullable location;
@property (nonatomic, copy) NSString * _Nullable keyword;
@property (nonatomic, copy) NSString * _Nullable contentUrl;
@property (nonatomic) NSInteger consentFlag;
/// Initialize <code>RequestOptions</code>. Mostly for using in Objective-C
/// \param age Age
///
/// \param location Location
///
/// \param gender Gender
///
/// \param keyword additional keywords
///
/// \param contentUrl Content URL
///
- (nonnull instancetype)initWithAge:(NSNumber * _Nullable)age location:(CLLocation * _Nullable)location gender:(enum Gender)gender keyword:(NSString * _Nullable)keyword contentUrl:(NSString * _Nullable)contentUrl OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class MNGPreference;

SWIFT_CLASS("_TtC12BlueStackSDK37RequestOptionsToPreferenceTransformer")
@interface RequestOptionsToPreferenceTransformer : NSObject
- (MNGPreference * _Nullable)transform:(RequestOptions * _Nullable)requestOptions SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The <code>Reward</code> class that describes earned reward
SWIFT_CLASS("_TtC12BlueStackSDK6Reward")
@interface Reward : NSObject
/// Currency of the reward
@property (nonatomic, readonly, copy) NSString * _Nullable currency;
/// Amount earned
@property (nonatomic, readonly, strong) NSNumber * _Nullable amount;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol RewardedAdDelegate;

/// The <code>RewardedAd</code> class is responsible for handling the lifecycle and presentation of rewarded ads. Rewarded ads are full-screen video or interactive ads that users can choose to watch in exchange for in-app rewards.
SWIFT_CLASS("_TtC12BlueStackSDK10RewardedAd")
@interface RewardedAd : NSObject <FullScreenDisplayableAd>
/// Returns whether the rewarded ad is ready to be displayed.
@property (nonatomic, readonly) BOOL isReady;
/// The placement ID.
@property (nonatomic, readonly, copy) NSString * _Nonnull placementID;
/// View controller from which ad will present full screen content after user interacts with the ad.
@property (nonatomic, strong) UIViewController * _Nullable viewController;
/// An optional delegate object that receives notifications about the ad’s lifecycle events, such as when the ad is loaded or failed to load.
@property (nonatomic, strong) id <RewardedAdDelegate> _Nullable delegate;
/// An optional delegate object that receives notifications about the ad’s full screen content, such as when the ad presented, failed to present or dismissed.
@property (nonatomic, strong) id <FullScreenDelegate> _Nullable fullScreenDelegate;
/// Initializes a new instance of the <code>RewardedAd</code> class with the specified placement ID.
/// \param placementID The placement ID of your rewarded ad.
///
- (nonnull instancetype)initWithPlacementID:(NSString * _Nonnull)placementID;
/// Request to load an rewarded Ad.
/// \param requestOptions The <code>RequestOptions</code> object for supplying targeting information.
///
- (void)loadWithRequestOptions:(RequestOptions * _Nullable)requestOptions;
/// Request to load an Rewarded Ad.
- (void)load;
/// Present the rewarded ad on top of the provided view controller. Must be called on the main thread.
/// \param rootViewController An optional view controller to present the ad. If not given ad will be presented from key UIWindow’s top most view controller.
///
- (void)showFromRootViewController:(UIViewController * _Nullable)rootViewController;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_PROTOCOL("_TtP12BlueStackSDK18RewardedAdDelegate_")
@protocol RewardedAdDelegate <NSObject>
/// Called when the rewarded ad has successfully loaded.
/// \param ad The <code>RewardedAd</code> object that has been loaded.
///
- (void)didLoadRewardedAd:(RewardedAd * _Nonnull)ad;
/// Called when the rewarded ad fails to load. The error parameter provides details about the failure.
/// \param ad The <code>RewardedAd</code> object that failed
///
/// \param error The error describing the failure reason.
///
- (void)rewardedAd:(RewardedAd * _Nonnull)ad didFailedToLoadWithError:(NSError * _Nonnull)error;
/// Called when the user has watched the ad and earned the reward.
/// \param ad The <code>RewardedAd</code> object
///
/// \param reward The <code>Reward</code> class object containing the reward details.
///
- (void)rewardedAd:(RewardedAd * _Nonnull)ad didEarnedReward:(Reward * _Nullable)reward;
@end


#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
